openapi: 3.0.0
info:
  contact:
      name: https://www.almacam.com/company/join-us/
      url: https://www.almacam.com/company/join-us/
  description:
      <b>Meetup python à Grenoble</b>
      <br />
      <b>Des outils pour écrire des Microservices sereinement en Python</b>
      <br />
      <b>12-12-2019</b>
      <br />
      <br />
      On recrute !
      We are hiring!
      <br />
  version: 0.0.1
  title: Des outils pour écrire des Microservices sereinement en Python
tags:
  - name: pet
    description: Everything about your Pets
paths:
  /pet:
    get:
      tags:
        - pet
      summary: List pets from the store
      parameters:
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/expandParam"
      description: ""
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  results:
                    items:
                      $ref: "#/components/schemas/Pet"
                    type: array
                    description: Pets in a list
                  count:
                    type: integer
                    format: int64
                    description: Number of existing pets
                    example: 1
            application/xml:
              schema:
                properties:
                  results:
                    items:
                      $ref: "#/components/schemas/Pet"
                    type: array
                    description: Pets in a list
                  count:
                    type: integer
                    format: int64
                    description: Number of existing pets
                    example: 1
          description: Successful response.
      security:
      - jwt: ['secret']
  /pet/last:
    get:
      tags:
        - pet
      summary: List last pet from the store
      parameters:
        - $ref: "#/components/parameters/expandParam"
      description: ""
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Pet"
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
      security:
      - jwt: ['secret']
servers:
  - url: http://127.0.0.1:5000/v1
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.functions.auth.decode_jwt_token
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
      example:
        name: name
        id: 6
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
      example:
        name: name
        id: 1
    Pet:
      type: object
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: "#/components/schemas/Category"
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: "#/components/schemas/Tag"
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Pet
      example:
        photoUrls:
          - photoUrls
          - photoUrls
        name: doggie
        id: 0
        category:
          name: name
          id: 6
        tags:
          - name: name
            id: 1
          - name: name
            id: 1
        status: available
  parameters:
    limitParam:
      name: 'limit'
      description: "items per page limit"
      in: query
      required: false
      schema:
        type: integer
        format: int64
    offsetParam:
      name: 'offset'
      description: "number of items to skip"
      in: query
      required: false
      schema:
        type: integer
        format: int64
    expandParam:
      name: 'expand'
      description: "what related data to expand"
      in: query
      required: false
      schema:
        type: string
